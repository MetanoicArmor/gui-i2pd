#!/usr/bin/env swift

import Foundation

// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –±–µ–∑ GUI
print("üèÉ –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ I2PD GUI")
print("==========================================")

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∏–Ω–∞—Ä–Ω–∏–∫–∞
let executablePaths = ["./i2pd", "/usr/local/bin/i2pd", "/opt/homebrew/bin/i2pd"]
var foundPath = ""

for path in executablePaths {
    if FileManager.default.fileExists(atPath: path) {
        foundPath = path
        print("‚úÖ –ù–∞–π–¥–µ–Ω –±–∏–Ω–∞—Ä–Ω–∏–∫ i2pd –ø–æ –ø—É—Ç–∏: \(path)")
        break
    }
}

if foundPath.isEmpty {
    print("‚ùå –ë–∏–Ω–∞—Ä–Ω–∏–∫ i2pd –Ω–µ –Ω–∞–π–¥–µ–Ω")
    print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª i2pd –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
} else {
    print("‚úÖ –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞")
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥...")
let checkProcess = Process()
checkProcess.executableURL = URL(fileURLWithPath: "/bin/bash")
checkProcess.arguments = ["-c", "pgrep -f i2pd"]

let pipe = Pipe()
checkProcess.standardOutput = pipe

do {
    try checkProcess.run()
    checkProcess.waitUntilExit()
    
    let data = pipe.fileHandleForReading.readDataToEndOfFile()
    let output = String(data: data, encoding: .utf8) ?? ""
    
    if output.trimmingCharacters(in: .whitespacesAndNewlines).isEmpty {
        print("üìä –°—Ç–∞—Ç—É—Å: I2P daemon –Ω–µ –∑–∞–ø—É—â–µ–Ω")
    } else {
        print("üìä –°—Ç–∞—Ç—É—Å: I2P daemon –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞–π–¥–µ–Ω—ã)")
    }
} catch {
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: \(error.localizedDescription)")
}

print("\nüéØ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
print("üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Xcode:")
print("   open i2pd-gui.xcodeproj")
