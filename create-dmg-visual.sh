#!/bin/bash
set -e

echo "üçé –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ DMG —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"
echo "========================================================"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
APP_NAME="I2P Daemon GUI"
DMG_NAME="I2P-Daemon-GUI-v2.58.0"
VOLUME_NAME="I2P Daemon GUI"
DMG_SIZE="50m"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é i2pd
VERSION_OUTPUT=$(./i2pd --version 2>&1)
I2PD_VERSION=$(echo "$VERSION_OUTPUT" | grep -o "i2pd version [0-9]\+\.[0-9]\+\.[0-9]\+" | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1)

if [ -z "$I2PD_VERSION" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–µ—Ä—Å–∏—é i2pd"
    I2PD_VERSION="2.58.0"
    echo "‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Ä—Å–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: $I2PD_VERSION"
fi

echo "‚úÖ –í–µ—Ä—Å–∏—è i2pd: $I2PD_VERSION"
echo "üì± –í–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $I2PD_VERSION"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ .app —Ñ–∞–π–ª–∞
if [ ! -d "${APP_NAME}.app" ]; then
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ${APP_NAME}.app –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    echo "üî® –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
    ./build-app-simple.sh
fi

echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ: ${APP_NAME}.app"

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É –¥–ª—è DMG
TEMP_DIR="temp_dmg"
DMG_DIR="${TEMP_DIR}/dmg"

echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã DMG..."

# –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ñ–∞–π–ª—ã
rm -rf "${TEMP_DIR}"
rm -f "${DMG_NAME}.dmg"
rm -f "${DMG_NAME}_temp.dmg"

# –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
mkdir -p "${DMG_DIR}"

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
cp -R "${APP_NAME}.app" "${DMG_DIR}/"

# –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ Applications
ln -s /Applications "${DMG_DIR}/Applications"

echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ DMG —Å–æ–∑–¥–∞–Ω–∞"

# –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
echo "üé® –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º..."

BACKGROUND_DIR="${DMG_DIR}/.background"
mkdir -p "${BACKGROUND_DIR}"

# –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Python
python3 << EOF
from PIL import Image, ImageDraw, ImageFont
import os

# –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 800x600
width, height = 800, 600
image = Image.new('RGB', (width, height), color='#f8f9fa')
draw = ImageDraw.Draw(image)

# –†–∏—Å—É–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
for y in range(height):
    color_value = int(248 - (y / height) * 20)
    color = (color_value, color_value, color_value)
    draw.line([(0, y), (width, y)], fill=color)

# –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
# –¢–æ–Ω–∫–∞—è —Ä–∞–º–∫–∞
draw.rectangle([5, 5, width-5, height-5], outline='#e9ecef', width=1)

# –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–≤–µ—Ä—Ö)
app_area_y = 150
app_area_height = 200

# –û–±–ª–∞—Å—Ç—å –¥–ª—è Applications (–Ω–∏–∑)
apps_area_y = 400
apps_area_height = 150

# –†–∏—Å—É–µ–º –æ–±–ª–∞—Å—Ç—å –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
draw.rectangle([width//2-100, app_area_y-20, width//2+100, app_area_y+app_area_height-20], 
               outline='#007AFF', width=2, fill='#f0f8ff')

# –†–∏—Å—É–µ–º –æ–±–ª–∞—Å—Ç—å –¥–ª—è Applications
draw.rectangle([width//2-80, apps_area_y-20, width//2+80, apps_area_y+apps_area_height-20], 
               outline='#28a745', width=2, fill='#f0fff4')

# –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à—É—é —Å—Ç—Ä–µ–ª–∫—É –º–µ–∂–¥—É –æ–±–ª–∞—Å—Ç—è–º–∏
arrow_start_x = width // 2
arrow_start_y = app_area_y + app_area_height - 20
arrow_end_y = apps_area_y - 20

# –†–∏—Å—É–µ–º —Å—Ç—Ä–µ–ª–∫—É
arrow_points = [
    (arrow_start_x, arrow_start_y),
    (arrow_start_x - 15, arrow_start_y + 20),
    (arrow_start_x + 15, arrow_start_y + 20)
]
draw.polygon(arrow_points, fill='#6c757d')

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
try:
    title_font = ImageFont.truetype("/System/Library/Fonts/Arial.ttf", 20)
    subtitle_font = ImageFont.truetype("/System/Library/Fonts/Arial.ttf", 14)
except:
    title_font = ImageFont.load_default()
    subtitle_font = ImageFont.load_default()

# –¢–µ–∫—Å—Ç –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app_text = "I2P Daemon GUI"
bbox = draw.textbbox((0, 0), app_text, font=title_font)
text_width = bbox[2] - bbox[0]
draw.text((width//2 - text_width//2, app_area_y + 20), 
          app_text, fill='#007AFF', font=title_font)

# –¢–µ–∫—Å—Ç –¥–ª—è Applications
apps_text = "Applications"
bbox = draw.textbbox((0, 0), apps_text, font=subtitle_font)
text_width = bbox[2] - bbox[0]
draw.text((width//2 - text_width//2, apps_area_y + 10), 
          apps_text, fill='#28a745', font=subtitle_font)

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
instruction_text = "–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –ø–∞–ø–∫—É Applications"
bbox = draw.textbbox((0, 0), instruction_text, font=subtitle_font)
text_width = bbox[2] - bbox[0]
draw.text((width//2 - text_width//2, height - 50), 
          instruction_text, fill='#6c757d', font=subtitle_font)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
image.save('${BACKGROUND_DIR}/background.png')
print("‚úÖ –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —Å–æ–∑–¥–∞–Ω–æ")
EOF

echo "‚úÖ –§–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ"

# –°–æ–∑–¥–∞–µ–º DMG –æ–±—Ä–∞–∑
echo "üî® –°–æ–∑–¥–∞–Ω–∏–µ DMG –æ–±—Ä–∞–∑–∞..."

hdiutil create -srcfolder "${DMG_DIR}" -volname "${VOLUME_NAME}" -fs HFS+ -fsargs "-c c=64,a=16,e=16" -format UDRW -size ${DMG_SIZE} "${DMG_NAME}_temp.dmg"

echo "‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–π DMG —Å–æ–∑–¥–∞–Ω"

# –ú–æ–Ω—Ç–∏—Ä—É–µ–º DMG –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
echo "üì± –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DMG –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏..."

MOUNT_DIR="/Volumes/${VOLUME_NAME}"
hdiutil attach "${DMG_NAME}_temp.dmg" -readwrite -noverify -noautoopen

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥
echo "üé® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ DMG..."

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
if [ -f "${BACKGROUND_DIR}/background.png" ]; then
    mkdir -p "${MOUNT_DIR}/.background"
    cp "${BACKGROUND_DIR}/background.png" "${MOUNT_DIR}/.background/"
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ AppleScript
osascript << EOF
tell application "Finder"
    tell disk "${VOLUME_NAME}"
        open
        set current view of container window to icon view
        set toolbar visible of container window to false
        set statusbar visible of container window to false
        set the bounds of container window to {300, 100, 1100, 700}
        set theViewOptions to the icon view options of container window
        set arrangement of theViewOptions to not arranged
        set icon size of theViewOptions to 128
        
        -- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        try
            set background picture of theViewOptions to file ".background:background.png"
        end try
        
        -- –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞–∫ –≤ Chrome installer
        -- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ä—Ö—É
        set position of item "${APP_NAME}.app" of container window to {400, 200}
        
        -- Applications —Å–Ω–∏–∑—É
        set position of item "Applications" of container window to {400, 450}
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º –æ–∫–Ω–æ
        close
        open
        update without registering applications
        delay 3
    end tell
end tell
EOF

echo "‚úÖ –í–∏–∑—É–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω"

# –†–∞–∑–º–æ–Ω—Ç–∏—Ä—É–µ–º DMG
echo "üì§ –†–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DMG..."
hdiutil detach "${MOUNT_DIR}"

# –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
echo "üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç..."
hdiutil convert "${DMG_NAME}_temp.dmg" -format UDZO -imagekey zlib-level=9 -o "${DMG_NAME}.dmg"

# –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f "${DMG_NAME}_temp.dmg"
rm -rf "${TEMP_DIR}"

# –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º DMG
echo "üîê –ü–æ–¥–ø–∏—Å—å DMG..."

# –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏
if ! security find-identity -v -p codesigning | grep -q "I2P Daemon GUI"; then
    echo "üî® –°–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏..."
    
    cat > /tmp/dmg_cert.conf << EOF
[req]
distinguished_name = req_distinguished_name
req_extensions = v3_req
prompt = no

[req_distinguished_name]
C = US
ST = CA
L = San Francisco
O = I2P GUI Project
OU = Development
CN = I2P Daemon GUI

[v3_req]
keyUsage = keyEncipherment, dataEncipherment
extendedKeyUsage = codeSigning
EOF

    openssl req -x509 -newkey rsa:2048 -keyout /tmp/dmg_key.pem -out /tmp/dmg_cert.pem -days 365 -nodes -config /tmp/dmg_cert.conf 2>/dev/null
    
    security import /tmp/dmg_key.pem -k ~/Library/Keychains/login.keychain-db -T /usr/bin/codesign 2>/dev/null || true
    security import /tmp/dmg_cert.pem -k ~/Library/Keychains/login.keychain-db -T /usr/bin/codesign 2>/dev/null || true
    security add-trusted-cert -d -r trustRoot -k ~/Library/Keychains/login.keychain-db /tmp/dmg_cert.pem 2>/dev/null || true
    
    rm -f /tmp/dmg_cert.conf /tmp/dmg_key.pem /tmp/dmg_cert.pem
fi

# –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º DMG
if security find-identity -v -p codesigning | grep -q "I2P Daemon GUI"; then
    codesign --force --sign "I2P Daemon GUI" "${DMG_NAME}.dmg" 2>/dev/null && echo "‚úÖ DMG –ø–æ–¥–ø–∏—Å–∞–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º"
elif security find-identity -v -p codesigning | grep -q "Developer ID"; then
    DEVELOPER_ID=$(security find-identity -v -p codesigning | grep "Developer ID" | head -1 | sed 's/.*"\(.*\)".*/\1/')
    codesign --force --sign "$DEVELOPER_ID" "${DMG_NAME}.dmg" 2>/dev/null && echo "‚úÖ DMG –ø–æ–¥–ø–∏—Å–∞–Ω Developer ID"
else
    codesign --force --sign - "${DMG_NAME}.dmg" 2>/dev/null && echo "‚úÖ DMG –ø–æ–¥–ø–∏—Å–∞–Ω –±–∞–∑–æ–≤–æ–π –ø–æ–¥–ø–∏—Å—å—é"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å—å
codesign -v "${DMG_NAME}.dmg" 2>/dev/null && echo "‚úÖ –ü–æ–¥–ø–∏—Å—å –≤–∞–ª–∏–¥–Ω–∞" || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–ø–∏—Å—å—é"

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–º DMG
echo ""
echo "üéâ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π DMG —Å –≤–∏–∑—É–∞–ª—å–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º —Å–æ–∑–¥–∞–Ω!"
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   üìç –ü—É—Ç—å: $(pwd)/${DMG_NAME}.dmg"
echo "   üì¶ –†–∞–∑–º–µ—Ä: $(du -sh "${DMG_NAME}.dmg" | cut -f1)"
echo "   üì± –í–µ—Ä—Å–∏—è: ${I2PD_VERSION}"
echo "   üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–º–∞: ${VOLUME_NAME}"
echo ""
echo "üé® –í–∏–∑—É–∞–ª—å–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:"
echo "   üì± –ë–æ–ª—å—à–∞—è –∏–∫–æ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–≤–µ—Ä—Ö—É"
echo "   üìÅ –ü–∞–ø–∫–∞ Applications —Å–Ω–∏–∑—É"
echo "   ‚¨áÔ∏è –°—Ç—Ä–µ–ª–∫–∞ –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏"
echo "   üé® –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω"
echo "   üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —É—Å—Ç–∞–Ω–æ–≤–∫–µ"
echo ""
echo "üöÄ –°–ø–æ—Å–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:"
echo "   –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –Ω–∞: ${DMG_NAME}.dmg"
echo "   –ö–æ–º–∞–Ω–¥–∞: open ${DMG_NAME}.dmg"
echo "   –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –≤ Applications"
echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ –∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–º—É —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—é!"
